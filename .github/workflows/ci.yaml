name: CI

on:
  push:

env:
  GO_VERSION: 1.23
  PY_VERSION: 3.12
  GOLANGCI_LINT_VERSION: v1.63.4
  GINKGO_VERSION: v2.23.3

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: lint commit messages
        uses: opensource-nepal/commitlint@v1

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: setup poetry
        uses: Gr1N/setup-poetry@v9

      - run: poetry install

      - name: lint python
        run: |
          poetry run black features --check
          poetry run pylint features

      - name: lint go
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}


  unit-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: install ginkgo
        run: go install github.com/onsi/ginkgo/v2/ginkgo@${{ env.GINKGO_VERSION }}

      - name: unit test
        run: ginkgo -r --randomize-all


  functional-test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: build
        run: go build

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: setup poetry
        uses: Gr1N/setup-poetry@v9

      - run: poetry install

      - name: functional test
        env:
          TEST_REPO_TOKEN: ${{ secrets.TEST_REPO_TOKEN }}
        run: poetry run behave -t ~@ssh

  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    needs: [lint, unit-test, functional-test]
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-tags: true

      - name: semantic-release
        uses: ahmadnassri/action-semantic-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.STENCILER_RELEASE_TOKEN }}
