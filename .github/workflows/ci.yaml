name: CI

on:
  push:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: pre-build dev container image
        uses: devcontainers/ci@v0.3
        with:
          imageName: ghcr.io/rogueserenity/stenciler-devcontainer
          cacheFrom: ghcr.io/rogueserenity/stenciler-devcontainer
          push: always

  lint:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: lint
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/rogueserenity/stenciler-devcontainer
          push: never
          runCmd: |
            golangci-lint run
            poetry install
            poetry run black features
            poetry run pylint features

  unit-test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: unit test
        uses: devcontainers/ci@v0.3
        with:
          cacheFrom: ghcr.io/rogueserenity/stenciler-devcontainer
          push: never
          runCmd: |
            ginkgo -r --randomize-all

  functional-test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: functional test
        uses: devcontainers/ci@v0.3
        with:
          env: |
            TEST_REPO_TOKEN=${{ secrets.TEST_REPO_TOKEN }}
          cacheFrom: ghcr.io/rogueserenity/stenciler-devcontainer
          push: never
          runCmd: |
            go build
            poetry install
            poetry run behave -t ~@ssh
